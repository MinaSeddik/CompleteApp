<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:ldap="http://www.springframework.org/schema/c"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <context:component-scan base-package="com.mina.security"/>

    <beans:bean id="appEntryPoint"
                class="com.mina.security.HttpAuthenticationEntryPoint"/>

    <beans:bean id="appSuccessHandler"
                class="com.mina.security.SimpleUrlAuthenticationSuccessHandler"/>

    <beans:bean id="appFailureHandler"
                class="com.mina.security.SimpleUrlAuthenticationFailHandler"/>

    <http use-expressions="true" entry-point-ref="appEntryPoint">

        <intercept-url pattern="/" access="permitAll"/>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/**" access="isAuthenticated()"/>

        <form-login
                login-page="/login"
                password-parameter="password"
                username-parameter="username"
                authentication-success-handler-ref="appSuccessHandler"
                authentication-failure-handler-ref="appFailureHandler"
        />
        <logout logout-url="/logout"/>
        <http-basic/>
        <csrf disabled="true"/>
    </http>


    <!-- Enable the annotations for defining the secure role -->
    <global-method-security secured-annotations="enabled"/>

    <beans:bean class="com.mina.security.auth.SimpleAuthenticationProvider" />
    <authentication-manager erase-credentials="true">
        <authentication-provider ref='ldapAuthProvider'/>
        <!--<authentication-provider ref='simpleAuthenticationProvider'/>-->
    </authentication-manager>












    <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <beans:constructor-arg value="${ldap.url}"/>
        <beans:property name="base" value="${ldap.base}"/>
        <beans:property name="userDn" value="${ldap.username}"/>
        <beans:property name="password" value="${ldap.password}"/>
        <beans:property name="baseEnvironmentProperties">
            <beans:map>
                <beans:entry key="java.naming.ldap.version" value="3"/>
            </beans:map>
        </beans:property>
    </beans:bean>

    <beans:bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
        <beans:constructor-arg>
            <beans:bean id="bindAuthenticator" class="org.springframework.security.ldap.authentication.BindAuthenticator">
                <beans:constructor-arg ref="contextSource"/>
                <beans:property name="userDnPatterns">
                    <beans:list><beans:value>uid={0},ou=Users</beans:value></beans:list>
                </beans:property>
            </beans:bean>
        </beans:constructor-arg>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
                <beans:constructor-arg ref="contextSource"/>
                <beans:constructor-arg value="ou=groups"/> <!-- group search base -->
                <beans:property name="searchSubtree" value="true"/>
                <beans:property name="ignorePartialResultException" value="true"/>
                <beans:property name="groupSearchFilter" value="(memberUid={1})"/>
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>

</beans:beans>